package org.basic.grammar.jdk.jdk7.e5_networking.ws.client.rpc_encoded_wrapped;

import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.Response;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "HelloServicePort", targetNamespace = "http://www.wstest.org/hello")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface HelloServicePort {


    /**
     * 
     * @param sayHelloUserPart
     * @param sayHelloAgePart
     * @return
     *     returns javax.xml.ws.Response<org.basic.jdk6.ws.client.rpc_encoded_wrapped.User>
     */
    @WebMethod(operationName = "sayHello", action = "sayHelloAction")
    public Response<User> sayHelloAsync(
        @WebParam(name = "sayHelloUserPart", partName = "sayHelloUserPart")
        String sayHelloUserPart,
        @WebParam(name = "sayHelloAgePart", partName = "sayHelloAgePart")
        int sayHelloAgePart);

    /**
     * 
     * @param sayHelloUserPart
     * @param asyncHandler
     * @param sayHelloAgePart
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "sayHello", action = "sayHelloAction")
    public Future<?> sayHelloAsync(
        @WebParam(name = "sayHelloUserPart", partName = "sayHelloUserPart")
        String sayHelloUserPart,
        @WebParam(name = "sayHelloAgePart", partName = "sayHelloAgePart")
        int sayHelloAgePart,
        @WebParam(name = "asyncHandler", partName = "asyncHandler")
        AsyncHandler<User> asyncHandler);

    /**
     * 
     * @param sayHelloUserPart
     * @param sayHelloAgePart
     * @return
     *     returns org.basic.jdk6.ws.client.rpc_encoded_wrapped.User
     */
    @WebMethod(action = "sayHelloAction")
    @WebResult(name = "sayHelloPart", partName = "sayHelloPart")
    @Action(input = "sayHelloAction", output = "http://www.wstest.org/hello/HelloServicePort/sayHelloResponse")
    public User sayHello(
        @WebParam(name = "sayHelloUserPart", partName = "sayHelloUserPart")
        String sayHelloUserPart,
        @WebParam(name = "sayHelloAgePart", partName = "sayHelloAgePart")
        int sayHelloAgePart);

    /**
     * 
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<org.basic.jdk6.ws.client.rpc_encoded_wrapped.UserArray>
     */
    @WebMethod(operationName = "listUser")
    public Response<UserArray> listUserAsync(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "listUser")
    public Future<?> listUserAsync(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "asyncHandler", partName = "asyncHandler")
        AsyncHandler<UserArray> asyncHandler);

    /**
     * 
     * @param arg0
     * @return
     *     returns org.basic.jdk6.ws.client.rpc_encoded_wrapped.UserArray
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://www.wstest.org/hello/HelloServicePort/listUserRequest", output = "http://www.wstest.org/hello/HelloServicePort/listUserResponse")
    public UserArray listUser(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

}
