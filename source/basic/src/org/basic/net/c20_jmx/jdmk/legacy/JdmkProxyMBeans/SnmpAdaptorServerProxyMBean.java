//
// Generated by proxygen version 5.1 when compiling SnmpAdaptorServer (Tue Apr 13 19:29:42 MEST 2004).
//

package org.basic.net.c20_jmx.jdmk.legacy.JdmkProxyMBeans;

import javax.management.AttributeNotFoundException;
import javax.management.InstanceNotFoundException;
import javax.management.InvalidAttributeValueException;
import javax.management.MBeanException;
import javax.management.ReflectionException;

import com.sun.management.comm.SnmpInformHandler;
import com.sun.management.comm.SnmpInformRequest;
import com.sun.management.snmp.InetAddressAcl;
import com.sun.management.snmp.SnmpIpAddress;
import com.sun.management.snmp.SnmpOid;
import com.sun.management.snmp.SnmpPduFactory;
import com.sun.management.snmp.SnmpPduPacket;
import com.sun.management.snmp.SnmpTimeticks;
import com.sun.management.snmp.SnmpVarBindList;
import com.sun.management.snmp.agent.SnmpMibAgent;
import com.sun.management.snmp.agent.SnmpMibHandler;
import com.sun.management.snmp.agent.SnmpUserDataFactory;
import com.sun.management.snmp.manager.SnmpPeer;

/**
 * The proxy MBean interface of the SnmpAdaptorServer MBean.
 *
 * @see com.sun.management.tools.ProxyGen
 */
public interface SnmpAdaptorServerProxyMBean {

    public java.lang.String getProtocol() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException, MBeanException;

    public int getServedClientCount() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException, MBeanException;

    public int getActiveClientCount() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException, MBeanException;

    public int getMaxActiveClientCount() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException, MBeanException;

    public InetAddressAcl getInetAddressAcl() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException,
            MBeanException;

//    public com.sun.management.snmp.IPAcl.IPAcl getIPAcl() throws InstanceNotFoundException, AttributeNotFoundException,
//            ReflectionException, MBeanException;

    public java.lang.Integer getTrapPort() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException,
            MBeanException;

    public int getInformPort() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException, MBeanException;

    public java.lang.Integer getBufferSize() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException,
            MBeanException;

    public int getMaxTries() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException, MBeanException;

    public int getTimeout() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException, MBeanException;

    public SnmpPduFactory getPduFactory() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException, MBeanException;

    public SnmpUserDataFactory getUserDataFactory() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException,
            MBeanException;

    public boolean getAuthTrapEnabled() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException, MBeanException;

    public boolean getAuthRespEnabled() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException, MBeanException;

    public java.lang.String getEnterpriseOid() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException,
            MBeanException;

    public String[] getMibs() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException, MBeanException;

    public java.lang.Long getSnmpOutTraps() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException,
            MBeanException;

    public java.lang.Long getSnmpOutGetResponses() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException,
            MBeanException;

    public java.lang.Long getSnmpOutGenErrs() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException,
            MBeanException;

    public java.lang.Long getSnmpOutBadValues() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException,
            MBeanException;

    public java.lang.Long getSnmpOutNoSuchNames() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException,
            MBeanException;

    public java.lang.Long getSnmpOutTooBigs() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException,
            MBeanException;

    public java.lang.Long getSnmpInASNParseErrs() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException,
            MBeanException;

    public java.lang.Long getSnmpInBadCommunityUses() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException,
            MBeanException;

    public java.lang.Long getSnmpInBadCommunityNames() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException,
            MBeanException;

    public java.lang.Long getSnmpInBadVersions() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException,
            MBeanException;

    public java.lang.Long getSnmpOutPkts() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException,
            MBeanException;

    public java.lang.Long getSnmpInPkts() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException, MBeanException;

    public java.lang.Long getSnmpInGetRequests() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException,
            MBeanException;

    public java.lang.Long getSnmpInGetNexts() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException,
            MBeanException;

    public java.lang.Long getSnmpInSetRequests() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException,
            MBeanException;

    public java.lang.Long getSnmpInTotalSetVars() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException,
            MBeanException;

    public java.lang.Long getSnmpInTotalReqVars() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException,
            MBeanException;

    public java.lang.Long getSnmpSilentDrops() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException,
            MBeanException;

    public java.lang.Long getSnmpProxyDrops() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException,
            MBeanException;

    public int getState() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException, MBeanException;

    public java.lang.String getHost() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException, MBeanException;

    public int getPort() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException, MBeanException;

    public boolean isActive() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException, MBeanException;

    public java.lang.String getStateString() throws InstanceNotFoundException, AttributeNotFoundException, ReflectionException,
            MBeanException;

    public void setMaxActiveClientCount(int value) throws InstanceNotFoundException, ReflectionException, AttributeNotFoundException,
            InvalidAttributeValueException, MBeanException;

    public void setTrapPort(java.lang.Integer value) throws InstanceNotFoundException, ReflectionException, AttributeNotFoundException,
            InvalidAttributeValueException, MBeanException;

    public void setInformPort(int value) throws InstanceNotFoundException, ReflectionException, AttributeNotFoundException,
            InvalidAttributeValueException, MBeanException;

    public void setBufferSize(java.lang.Integer value) throws InstanceNotFoundException, ReflectionException, AttributeNotFoundException,
            InvalidAttributeValueException, MBeanException;

    public void setMaxTries(int value) throws InstanceNotFoundException, ReflectionException, AttributeNotFoundException,
            InvalidAttributeValueException, MBeanException;

    public void setTimeout(int value) throws InstanceNotFoundException, ReflectionException, AttributeNotFoundException,
            InvalidAttributeValueException, MBeanException;

    public void setPduFactory(SnmpPduFactory value) throws InstanceNotFoundException, ReflectionException, AttributeNotFoundException,
            InvalidAttributeValueException, MBeanException;

    public void setUserDataFactory(SnmpUserDataFactory value) throws InstanceNotFoundException, ReflectionException,
            AttributeNotFoundException, InvalidAttributeValueException, MBeanException;

    public void setAuthTrapEnabled(boolean value) throws InstanceNotFoundException, ReflectionException, AttributeNotFoundException,
            InvalidAttributeValueException, MBeanException;

    public void setAuthRespEnabled(boolean value) throws InstanceNotFoundException, ReflectionException, AttributeNotFoundException,
            InvalidAttributeValueException, MBeanException;

    public void setEnterpriseOid(java.lang.String value) throws InstanceNotFoundException, ReflectionException, AttributeNotFoundException,
            InvalidAttributeValueException, MBeanException;

    public void setPort(int value) throws InstanceNotFoundException, ReflectionException, AttributeNotFoundException,
            InvalidAttributeValueException, MBeanException;

    public SnmpMibHandler addMib(SnmpMibAgent p0) throws InstanceNotFoundException, ReflectionException, MBeanException;

    public SnmpMibHandler addMib(SnmpMibAgent p0, SnmpOid[] p1) throws InstanceNotFoundException, ReflectionException, MBeanException;

    public boolean removeMib(SnmpMibAgent p0) throws InstanceNotFoundException, ReflectionException, MBeanException;

    public void snmpV1Trap(int p0, int p1, SnmpVarBindList p2) throws InstanceNotFoundException, ReflectionException, MBeanException;

    public void snmpV1Trap(java.net.InetAddress p0, java.lang.String p1, int p2, int p3, SnmpVarBindList p4)
            throws InstanceNotFoundException, ReflectionException, MBeanException;

    public void snmpV1Trap(SnmpPeer p0, SnmpIpAddress p1, SnmpOid p2, int p3, int p4, SnmpVarBindList p5, SnmpTimeticks p6)
            throws InstanceNotFoundException, ReflectionException, MBeanException;

    public void snmpV2Trap(SnmpOid p0, SnmpVarBindList p1) throws InstanceNotFoundException, ReflectionException, MBeanException;

    public void snmpV2Trap(java.net.InetAddress p0, java.lang.String p1, SnmpOid p2, SnmpVarBindList p3) throws InstanceNotFoundException,
            ReflectionException, MBeanException;

    public void snmpV2Trap(SnmpPeer p0, SnmpOid p1, SnmpVarBindList p2, SnmpTimeticks p3) throws InstanceNotFoundException,
            ReflectionException, MBeanException;

    public void snmpPduTrap(SnmpPeer p0, SnmpPduPacket p1) throws InstanceNotFoundException, ReflectionException, MBeanException;

    public void snmpPduTrap(java.net.InetAddress p0, SnmpPduPacket p1) throws InstanceNotFoundException, ReflectionException,
            MBeanException;

    public SnmpInformRequest snmpInformRequest(java.net.InetAddress p0, java.lang.String p1, SnmpInformHandler p2, SnmpOid p3,
                                               SnmpVarBindList p4) throws InstanceNotFoundException, ReflectionException, MBeanException;

    public SnmpInformRequest snmpInformRequest(SnmpPeer p0, SnmpInformHandler p1, SnmpOid p2, SnmpVarBindList p3)
            throws InstanceNotFoundException, ReflectionException, MBeanException;

    public java.util.Vector snmpInformRequest(SnmpInformHandler p0, SnmpOid p1, SnmpVarBindList p2) throws InstanceNotFoundException,
            ReflectionException, MBeanException;

    public void start() throws InstanceNotFoundException, ReflectionException, MBeanException;

    public void stop() throws InstanceNotFoundException, ReflectionException, MBeanException;

    public boolean waitState(int p0, long p1) throws InstanceNotFoundException, ReflectionException, MBeanException;

}
