# @(#)file      README
# @(#)author    Sun Microsystems, Inc.
# @(#)version   1.3
# @(#)lastedit  04/04/16
#
# Copyright 2004 Sun Microsystems, Inc. All rights reserved.
# SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

# ==============================================================================
#
#  Example of a JMXMP connector configured with a custom SASL mechanism.
#
#  The SAMPLE SASL mechanism conveys the authorization ID from the SaslClient
#  to the SaslServer. The SaslServer then returns the given authorization ID
#  in the call SaslServer.getAuthorizationID(). In order to keep this SASL
#  mechanism as simple as possible no callbacks are used on either the server
#  or the client. The aim of this example is to show how to integrate a new
#  SASL mechanism into the JCA framework.
#
# ==============================================================================
#
# In order to compile & run the example, make a copy of this
# README file, update the variables to match your local installation,
# and then simply cut & paste all variable definitions & commands 
# as needed into a terminal window.
#
# Note that this README makes the assumption that you are running
# UNIX, you are familiar with the the JMX Remote API specification (in
# particular JMXServiceURL), and with Bourne or Korn shell syntax.
#
# All variable assignments and commands below are defined using 
# UNIX Korn shell syntax.
#
# If you are not running UNIX and the Korn shell you are expected
# to be able to adapt these commands to your favorite OS/shell
# environment.
#

# Update the following variables to match your local installation:
#
JDMK_HOME=@INSTALL_HOME_FOR_JDMK@
JDMK_LIB=${JDMK_HOME}/lib

classp=${JDMK_LIB}/jmx.jar:${JDMK_LIB}/jmxremote.jar:
${JDMK_LIB}/jmxremote_optional.jar:${JDMK_LIB}/sasl.jar

# JMX, JMX Remote API (mandatory) and SASL are integrated into J2SE 1.5 so
#
# classp=${JDMK_LIB}/jmxremote_optional.jar

# Compile Java classes
#
# * Server.java: creates an MBeanServer and creates and starts a secure
#                JMXMP connector server listening on port 5555.
#
# * Client.java: creates a secure JMXMP connector, creates and registers
#                a Simple standard MBean and performs operations on it.
#
# * ClientListener.java: implements a generic notification listener.
#
# * SimpleStandard.java: implements the Simple standard MBean.
#
# * SimpleStandardMBean.java: the management interface exposed by the Simple
#                             standard MBean.
#
# * Provider.java: the provider of the SAMPLE SASL mechanism.
#
# * ClientFactory.java: the SAMPLE SASL client factory.
#
# * ServerFactory.java: the SAMPLE SASL server factory.
#
# * SampleClient.java: the SAMPLE SASL client mechanism.
#
# * SampleServer.java: the SAMPLE SASL server mechanism.
#

javac -classpath $classp \
      mbeans/SimpleStandard.java \
      mbeans/SimpleStandardMBean.java \
      server/Server.java \
      client/Client.java \
      client/ClientListener.java \
      sample/Provider.java \
      sample/ClientFactory.java \
      sample/ServerFactory.java \
      sample/SampleClient.java \
      sample/SampleServer.java

# Start the Server:
#

java -classpath server:sample:mbeans:$classp Server &

# Start the Client:
#

java -classpath client:sample:mbeans:$classp Client

# ==============================================================================
