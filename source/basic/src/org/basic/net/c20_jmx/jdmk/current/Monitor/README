#
# @(#)file      README
# @(#)author    Sun Microsystems, Inc.
# @(#)version   4.12
# @(#)lastedit  04/04/16
#
# Copyright 2004 Sun Microsystems, Inc. All rights reserved.
# SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


                        Monitor Service Example
                        =======================


-----------------------------------------------------------------------
1. Overview
-----------------------------------------------------------------------

This example shows how to implement a simple agent application that uses
the monitoring service defined in the JMX specification.

The agent in this example registers a CounterMonitor MBean which observes
the number of MBeans registered in the MBean server.

This example shows also that a single monitor can be used to monitor the
same attribute in several MBeans at the same time.

In order to receive information from the monitor, the example also shows
how to implement a notification listener using the JMX notification model.


-----------------------------------------------------------------------
2. File List
-----------------------------------------------------------------------

This example is based on the following source files:

 * MonitorAgent.java:

    - Creates an MBean server
    - Registers a CounterMonitor MBean in the MBean server which sends out
      notifications when the number of registered MBeans exceeds a predefined
      threshold
    - Adds a listener for the notifications emitted by the CounterMonitor MBean
    - Registers a standard MBean (StandardObservedObject) and then a dynamic
      MBean (DynamicObservedObject), each having an attribute representing the
      number of MBeans registered in the MBean server
    - Adds the StandardObservedObject and the DynamicObservedObject MBeans
      to the list of ObservedObjects in the CounterMonitor MBean
    - Start the CounterMonitor MBean
    - Registers several Simple MBeans in the MBean server in order to make the
      number of MBeans registered in the MBean server go beyond the monitor's
      threshold, and so make the monitor emit notifications.

 * AgentListener.java:

    - Receives the notifications emitted by the CounterMonitor MBean

 * Simple.java:

    - A standard MBean

 * SimpleMBean.java:

    - The management interface of the Simple MBean

 * StandardObservedObject.java:

    - A standard MBean that has an attribute representing the number
      of MBeans registered in the MBean server

 * StandardObservedObjectMBean.java:

    - The management interface of the StandardObservedObject MBean

 * DynamicObservedObject.java:

    - A dynamic MBean that has an attribute representing the number
      of MBeans registered in the MBeanServer


-----------------------------------------------------------------------
3. Building and Running the Example
-----------------------------------------------------------------------

To build and run this example, make sure that your PATH environment variable
is correctly set to use the Java 2 SDK, Standard Edition 1.4 or later.

On J2SE 1.4, your CLASSPATH must contain the JAR files for the JMX runtime
(jmx.jar), as well as the current directory (.).

On J2SE 1.5, your CLASSPATH must contain the current directory (.).

These instructions assume the classpath is set in an environment variable,
though it may also be given on the command line with the -classpath option.

Copy the example source files to your working directory and type the following
commands:

    cd <WORKING_DIR>

    javac *.java

To run the example using the classes you have just built, type the
following command:

    java MonitorAgent

You then interact with the agent through the standard input and output
in the window where it was launched. The MonitorAgent class displays
information about each management step and waits for user input before
continuing.
