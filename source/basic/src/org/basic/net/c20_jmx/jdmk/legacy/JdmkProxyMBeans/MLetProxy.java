package org.basic.net.c20_jmx.jdmk.legacy.JdmkProxyMBeans;

//
// Generated by proxygen version 5.1 when compiling MLet (Tue Apr 13 19:32:36 MEST 2004).
//

import javax.management.AttributeNotFoundException;
import javax.management.InstanceNotFoundException;
import javax.management.InvalidAttributeValueException;
import javax.management.MBeanException;
import javax.management.MBeanRegistrationException;
import javax.management.ReflectionException;
import java.net.URL;
import javax.management.Attribute;
import javax.management.ObjectInstance;
import com.sun.jdmk.comm.CommunicationException;
import com.sun.jdmk.comm.RemoteMBeanServer;
import com.sun.jdmk.ProxyHandler;
import java.io.InputStream;
import java.util.Enumeration;
import java.util.Set;


/**
 * The implementation of the MLetProxyMBean Proxy MBean interface.
 *
 * @see com.sun.jdmk.tools.ProxyGen 
 */
public class MLetProxy implements MLetProxyMBean, com.sun.jdmk.Proxy {

  //
  // granularity for allocating new array
  //
  private int _granularity= 10;


  //
  // Variables required by Proxy interface
  //
  protected ObjectInstance objectInstance = null;
  protected ProxyHandler server = null;

  /**
   *  constructor with ObjectInstance parameter
   */
  public MLetProxy(ObjectInstance oi) {    
    objectInstance = oi ;
  }

  /**
   *  constructor with ObjectInstance parameter and ProxyHandler server
   */
  public MLetProxy(ObjectInstance oi, ProxyHandler server) {    
    objectInstance = oi ;
    this.server = server ;
  }

  public URL[] getURLs()
    throws InstanceNotFoundException, AttributeNotFoundException,
    ReflectionException, MBeanException {

      return ((URL[])server.getAttribute(objectInstance.getObjectName(), "URLs"));
    }

  public java.lang.String getLibraryDirectory()
    throws InstanceNotFoundException, AttributeNotFoundException,
    ReflectionException, MBeanException {

      return ((java.lang.String)server.getAttribute(objectInstance.getObjectName(), "LibraryDirectory"));
    }

  public  void setLibraryDirectory(java.lang.String value)
    throws InstanceNotFoundException, ReflectionException,
    AttributeNotFoundException,InvalidAttributeValueException,
    MBeanException {

      server.setAttribute(objectInstance.getObjectName(), new Attribute("LibraryDirectory",value));
  }

  public java.net.URL getResource(java.lang.String p0)
    throws InstanceNotFoundException, ReflectionException,
    MBeanException {

    Object result;
    Object[] params= new Object[1];
    String[] signature= new String[1];

    params[0]= p0;
    signature[0]= "java.lang.String";

    result= server.invoke(objectInstance.getObjectName(), "getResource", params, signature);
    return ((java.net.URL) result);
  }

  public java.io.InputStream getResourceAsStream(java.lang.String p0)
    throws InstanceNotFoundException, ReflectionException,
    MBeanException {

    Object result;
    Object[] params= new Object[1];
    String[] signature= new String[1];

    params[0]= p0;
    signature[0]= "java.lang.String";

    result= server.invoke(objectInstance.getObjectName(), "getResourceAsStream", params, signature);
    return ((java.io.InputStream) result);
  }

  public java.util.Enumeration getResources(java.lang.String p0)
    throws InstanceNotFoundException, ReflectionException,
    MBeanException {

    Object result;
    Object[] params= new Object[1];
    String[] signature= new String[1];

    params[0]= p0;
    signature[0]= "java.lang.String";

    result= server.invoke(objectInstance.getObjectName(), "getResources", params, signature);
    return ((java.util.Enumeration) result);
  }

  public void addURL(java.net.URL p0)
    throws InstanceNotFoundException, ReflectionException,
    MBeanException {

    Object result;
    Object[] params= new Object[1];
    String[] signature= new String[1];

    params[0]= p0;
    signature[0]= "java.net.URL";

    result= server.invoke(objectInstance.getObjectName(), "addURL", params, signature);
  }

  public void addURL(java.lang.String p0)
    throws InstanceNotFoundException, ReflectionException,
    MBeanException {

    Object result;
    Object[] params= new Object[1];
    String[] signature= new String[1];

    params[0]= p0;
    signature[0]= "java.lang.String";

    result= server.invoke(objectInstance.getObjectName(), "addURL", params, signature);
  }

  public java.util.Set getMBeansFromURL(java.net.URL p0)
    throws InstanceNotFoundException, ReflectionException,
    MBeanException {

    Object result;
    Object[] params= new Object[1];
    String[] signature= new String[1];

    params[0]= p0;
    signature[0]= "java.net.URL";

    result= server.invoke(objectInstance.getObjectName(), "getMBeansFromURL", params, signature);
    return ((java.util.Set) result);
  }

  public java.util.Set getMBeansFromURL(java.lang.String p0)
    throws InstanceNotFoundException, ReflectionException,
    MBeanException {

    Object result;
    Object[] params= new Object[1];
    String[] signature= new String[1];

    params[0]= p0;
    signature[0]= "java.lang.String";

    result= server.invoke(objectInstance.getObjectName(), "getMBeansFromURL", params, signature);
    return ((java.util.Set) result);
  }

  //
  // Implementation of the Proxy interface
  //

  /**
   *  Returns the <a href="javax.management.ObjectInstance.html#_top_"> object instance</a> of the object
   */
  public ObjectInstance getMBeanObjectInstance()  {
    return (objectInstance);
  }

  public ProxyHandler getServer() {
    return server;
  }

  public void setServer(ProxyHandler server) {
    this.server = server;
  }


}
