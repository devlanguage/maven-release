
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 2.1 Tue Jul 14 22:54:25 CST 2009 Generated source version: 2.1
 * 
 */

@WebServiceClient(name = "JMSGreeterService", targetNamespace = "http://cxf.apache.org/jms_greeter", wsdlLocation = "file:/D:/Java/eclipse_projects/webservice/source/cxf2.2/samples/jms_queue/wsdl/jms_greeter.wsdl")
public class JMSGreeterService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://cxf.apache.org/jms_greeter", "JMSGreeterService");
    public final static QName GreeterPort = new QName("http://cxf.apache.org/jms_greeter", "GreeterPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/D:/Java/eclipse_projects/webservice/source/cxf2.2/samples/jms_queue/wsdl/jms_greeter.wsdl");
        } catch (MalformedURLException e) {
            System.err
                    .println("Can not initialize the default wsdl from file:/D:/Java/eclipse_projects/webservice/source/cxf2.2/samples/jms_queue/wsdl/jms_greeter.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public JMSGreeterService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public JMSGreeterService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public JMSGreeterService() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return returns JMSGreeterPortType
     */
    @WebEndpoint(name = "GreeterPort")
    public JMSGreeterPortType getGreeterPort() {
        return super.getPort(GreeterPort, JMSGreeterPortType.class);
    }

    /**
     * 
     * @param features
     *            A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy. Supported features not in
     *            the <code>features</code> parameter will have their default values.
     * @return returns JMSGreeterPortType
     */
    @WebEndpoint(name = "GreeterPort")
    public JMSGreeterPortType getGreeterPort(WebServiceFeature... features) {
        return super.getPort(GreeterPort, JMSGreeterPortType.class, features);
    }

}
