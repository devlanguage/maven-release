#Specify the application name which will be used to package the class files.
db {
	oracle{ 
      url=jdbc:oracle:thin:@sunshapp40:1521:EMS7100A
      user=ygong1
      password=tellabs
      driver=oracle.jdbc.OracleDriver
      fetch_size=50
      max_statement=500
	}
	#user, password, autoReconnect(false), maxReconnects(3：重试次数), initialTimeout(2,重连前等待秒数),   maxRows(0:全部), useUnicode(false, 使用unicode输出), characterEncoding(encoding类型)	
	mysql{
      url=jdbc:mysql://localhost:3306/myDB?useUnicode
      user=ygong
      password=mysql
      #com.mysql.jdbc:Driver org.gjt.mm.mysql.Driver
      driver=com.mysql.jdbc:Driver
      autoReconnect=false
      maxReconnects=3
      initialTimeout=2
      maxRows=0
	}
	##Derby	内嵌（Running in one JVM with App）：jdbc:derby:helloDB;create=true    org.apache.derby.jdbc.EmbeddedDriver
	##关闭所有： DriverManager.getConnection("jdbc:derby:;shutdown=true"); 
	##关闭Db01: DriverManager.getConnection("jdbc:derby:Db01;shutdown=true"); 
	derby{
      url=jdbc:derby://localhost:1527/dbName;a1
      driver=org.apache.derby.jdbc.ClientDriver
	}
	db2{
      url=jdbc:db2://localhost:5000/sample
      driver=com.ibm.db2.jdbc.app.DB2Driver
      user=
      password=
	}
	sqlserver{
      url=jdbc:microsoft:sqlserver://localhost:1433;DatabaseName
      driver=com.microsoft.jdbc.sqlserver.SQLServerDriver
      user=sa
      name=
	}
	sybase{
      url=jdbc:sybase:Tds:localhost:5007/myDB
      driver=com.sybase.jdbc.SybDriver
	}
	informix{
      url=jdbc:informix-sqli://123.45.67.89:1533/myDB:INFORMIXSERVER
      driver=com.informix.jdbc.IfxDriver
	}
	postgresql{
      url=jdbc:postgresql://localhost/myDB
      driver=org.postgresql.Driver
	}
	access{
		url=jdbc:odbc:Driver={MicroSoft Access Driver (*.mdb)};DBQ="D:/Data/ReportDemo.mdb"
		driver=sun.jdbc.odbc.JdbcOdbcDriver
	}
	odbc{
		url=jdbc:odbc:<data-source-name>;CacheSize=20;ExtensionCase=LOWER;UID=kgh;PWD=fooey
		driver=sun.jdbc.odbc.JdbcOdbcDriver
	}
	
};
jms {
  imq {
    hosts=mq://192.168.127.174:7676,mq://192.168.127.174:7677,mq://192.168.127.174:7678,mq://192.168.127.174:7679,mq://192.168.127.174:7680,mq://192.168.127.174:7681,mq://192.168.127.196:7677,mq://192.168.127.196:7678    
    user=emsapp
    pwd=blank 
    port=17173
  }
  activemq{
  }  
}
pool{
	proxool{
	    simultaneous-build-throttle=10
        minimum-connection-count=5
        maximum-connection-count=10
        house-keeping-test-sql=select 1 from dual
        house-keeping-sleep-time==100	
	}
}

##Key should not contain "."
common{
	file{		
		##ends with .properties, .conf, .config should take the same format as this file
      snmp_client=SNMPClient.conf
      layerrate_data=layerrates.xml
      keyvalue_data=KeyValues.xml
	}
}


server{
##This is the name used to distinguish this server from other servers registered in Oracle (namely EMS). 
##When registered to Oracle, this name is the identity of this server.
   name=nbi_shanghai_server
##IP address of this NBI server. 
##After registration to EMS (Oracle), the notifications (alarms, events, etc.) will be sent to this IP via socket connection.
   ip=172.29.132.33
	
##Port number of this socket server which is waiting for incoming connections from Oracle sending in notifications.
   port=29254
	
   standalone=true
   MTOSI.enable=true
   SNMP.enable=false
	
   report.maxsize=100
   report.maxlifetime=3600000
   adminservicelistenport=29257
   resynctimegap=10
   resyncretrycount=3
##min value is 60
   adminserviceretryinterval=60
##0 stands for infinite retries
   adminserviceretrycount=0
   DeploymentMode=primary
##How many thread will be started for synchronizing the NBI model data from EMS	
   sync.threadSize=8
##How many thread will be started for processing the NBI webservice call. 	
   mtosiintf.handler.threadSize=20
##How much time will nbi check if file updated; TimeUnit: millseconds
   file.modify.check.interval=2000
##heart beat interval, TimeUnit: millseconds	
   socket.heart.beat.interval=3000
##If NBI support the JMX connection
   jmxremotesupport=true
   jmxremoteport=18002
};
