<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

	<bean id="userDao" class="org.testdata.user.dao.UserDao"></bean>
	<bean id="userService" class="org.testdata.user.service.UserServiceImpl">
		<property name="userDao" ref="userDao"></property>
	</bean>

	<!-- the transactional advice (what 'happens'; see the <aop:advisor/> bean below) -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<!-- the transactional semantics... -->
		<tx:attributes>
			<!-- all methods starting with 'get' are read-only -->
			<tx:method name="get*" read-only="true" />
			<tx:method name="create*" rollback-for="SpringTestRuntimeException"
				no-rollback-for="UnsupportedOperationException" isolation="READ_COMMITTED" propagation="NEVER" timeout="-1" />
			<!-- other methods use the default transaction settings (see below) -->
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<!-- ensure that the above transactional advice runs for any execution
		of an operation defined by the FooService interface -->
	<aop:config>
		<aop:pointcut id="userServcieAllMethods" expression="execution(* org.testdata.user.service.UserService.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="userServcieAllMethods" />
	</aop:config>
	<!-- similarly, don't forget the PlatformTransactionManager -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- other <bean/> definitions here -->
	<bean id="dbObject" class="org.testdata.db.bean.DbObject">
		<property name="userName" value="${jdbc.username}" />
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="password" value="${jdbc.password}" />
		<property name="url" value="${jdbc.url}" />
	</bean>
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	<bean id="propPlaceHolderConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesMode">
			<value>1</value>
		</property>
		<property name="locations">
			<list>
				<value>mail.properties</value>
				<value>jdbc.properties</value>
				<!--
					<value>WEB-INF/mail.properties</value>
					<value>WEB-INF/jdbc.properties</value>
				-->
			</list>
		</property>
	</bean>
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>resource_format</value>
				<value>resource_exception</value>
			</list>
		</property>
	</bean>
</beans>
